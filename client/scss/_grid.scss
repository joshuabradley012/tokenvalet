@use "sass:map";
@use "variables" as *;
@use "mixins/breakpoints" as *;
@use "mixins/grid" as *;

.container,
.container-fluid {
  @include make-container();
}

@each $breakpoint, $container-max-width in $container-max-widths {
  .container-#{$breakpoint} {
    @extend .container-fluid;
  }

  @include media-breakpoint-up($breakpoint, $grid-breakpoints) {
    %responsive-container-#{$breakpoint} {
      max-width: $container-max-width;
    }

    $extend-breakpoint: true;

    @each $name, $width in $grid-breakpoints {
      @if ($extend-breakpoint) {
        .container#{breakpoint-infix($name, $grid-breakpoints)} {
          @extend %responsive-container-#{$breakpoint};
        }

        @if ($breakpoint == $name) {
          $extend-breakpoint: false;
        }
      }
    }
  }
}

.row {
  @include make-row();

  > * {
    @include make-col-ready();
  }
}

.grid {
  display: grid;
  grid-template-rows: repeat(var(--#{$variable-prefix}rows, 1), 1fr);
  grid-template-columns: repeat(var(--#{$variable-prefix}columns, #{$grid-columns}), 1fr);
  gap: var(--#{$variable-prefix}gap, #{$grid-gutter-width});

  @include make-cssgrid();
}

@include make-grid-columns();

.col-content {
  @include make-col-ready();
  max-width: map.get($container-max-widths, sm);

  @include media-breakpoint-down(sm) {
    max-width: unset;
  }
}

